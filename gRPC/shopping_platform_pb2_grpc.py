# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import shopping_platform_pb2 as shopping__platform__pb2


class SellerServiceStub(object):
    """Define RPC services.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterSeller = channel.unary_unary(
                '/SellerService/RegisterSeller',
                request_serializer=shopping__platform__pb2.SellerRegistrationRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.SellerRegistrationResponse.FromString,
                )
        self.SellItem = channel.unary_unary(
                '/SellerService/SellItem',
                request_serializer=shopping__platform__pb2.SellItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.SellItemResponse.FromString,
                )
        self.UpdateItem = channel.unary_unary(
                '/SellerService/UpdateItem',
                request_serializer=shopping__platform__pb2.UpdateItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.UpdateItemResponse.FromString,
                )
        self.DeleteItem = channel.unary_unary(
                '/SellerService/DeleteItem',
                request_serializer=shopping__platform__pb2.DeleteItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.DeleteItemResponse.FromString,
                )
        self.DisplaySellerItems = channel.unary_unary(
                '/SellerService/DisplaySellerItems',
                request_serializer=shopping__platform__pb2.DisplaySellerItemsRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.DisplaySellerItemsResponse.FromString,
                )
        self.NotifyClient = channel.unary_unary(
                '/SellerService/NotifyClient',
                request_serializer=shopping__platform__pb2.NotifyClientRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.NotifyClientResponse.FromString,
                )


class SellerServiceServicer(object):
    """Define RPC services.
    """

    def RegisterSeller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisplaySellerItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SellerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterSeller,
                    request_deserializer=shopping__platform__pb2.SellerRegistrationRequest.FromString,
                    response_serializer=shopping__platform__pb2.SellerRegistrationResponse.SerializeToString,
            ),
            'SellItem': grpc.unary_unary_rpc_method_handler(
                    servicer.SellItem,
                    request_deserializer=shopping__platform__pb2.SellItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.SellItemResponse.SerializeToString,
            ),
            'UpdateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateItem,
                    request_deserializer=shopping__platform__pb2.UpdateItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.UpdateItemResponse.SerializeToString,
            ),
            'DeleteItem': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteItem,
                    request_deserializer=shopping__platform__pb2.DeleteItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.DeleteItemResponse.SerializeToString,
            ),
            'DisplaySellerItems': grpc.unary_unary_rpc_method_handler(
                    servicer.DisplaySellerItems,
                    request_deserializer=shopping__platform__pb2.DisplaySellerItemsRequest.FromString,
                    response_serializer=shopping__platform__pb2.DisplaySellerItemsResponse.SerializeToString,
            ),
            'NotifyClient': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyClient,
                    request_deserializer=shopping__platform__pb2.NotifyClientRequest.FromString,
                    response_serializer=shopping__platform__pb2.NotifyClientResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SellerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SellerService(object):
    """Define RPC services.
    """

    @staticmethod
    def RegisterSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SellerService/RegisterSeller',
            shopping__platform__pb2.SellerRegistrationRequest.SerializeToString,
            shopping__platform__pb2.SellerRegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SellerService/SellItem',
            shopping__platform__pb2.SellItemRequest.SerializeToString,
            shopping__platform__pb2.SellItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SellerService/UpdateItem',
            shopping__platform__pb2.UpdateItemRequest.SerializeToString,
            shopping__platform__pb2.UpdateItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SellerService/DeleteItem',
            shopping__platform__pb2.DeleteItemRequest.SerializeToString,
            shopping__platform__pb2.DeleteItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisplaySellerItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SellerService/DisplaySellerItems',
            shopping__platform__pb2.DisplaySellerItemsRequest.SerializeToString,
            shopping__platform__pb2.DisplaySellerItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SellerService/NotifyClient',
            shopping__platform__pb2.NotifyClientRequest.SerializeToString,
            shopping__platform__pb2.NotifyClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BuyerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchItem = channel.unary_unary(
                '/BuyerService/SearchItem',
                request_serializer=shopping__platform__pb2.SearchItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.SearchItemResponse.FromString,
                )
        self.BuyItem = channel.unary_unary(
                '/BuyerService/BuyItem',
                request_serializer=shopping__platform__pb2.BuyItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.BuyItemResponse.FromString,
                )
        self.AddToWishlist = channel.unary_unary(
                '/BuyerService/AddToWishlist',
                request_serializer=shopping__platform__pb2.AddToWishlistRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.AddToWishlistResponse.FromString,
                )
        self.RateItem = channel.unary_unary(
                '/BuyerService/RateItem',
                request_serializer=shopping__platform__pb2.RateItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.RateItemResponse.FromString,
                )
        self.NotifyClient = channel.unary_unary(
                '/BuyerService/NotifyClient',
                request_serializer=shopping__platform__pb2.NotifyClientRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.NotifyClientResponse.FromString,
                )


class BuyerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SearchItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddToWishlist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BuyerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchItem': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchItem,
                    request_deserializer=shopping__platform__pb2.SearchItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.SearchItemResponse.SerializeToString,
            ),
            'BuyItem': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyItem,
                    request_deserializer=shopping__platform__pb2.BuyItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.BuyItemResponse.SerializeToString,
            ),
            'AddToWishlist': grpc.unary_unary_rpc_method_handler(
                    servicer.AddToWishlist,
                    request_deserializer=shopping__platform__pb2.AddToWishlistRequest.FromString,
                    response_serializer=shopping__platform__pb2.AddToWishlistResponse.SerializeToString,
            ),
            'RateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.RateItem,
                    request_deserializer=shopping__platform__pb2.RateItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.RateItemResponse.SerializeToString,
            ),
            'NotifyClient': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyClient,
                    request_deserializer=shopping__platform__pb2.NotifyClientRequest.FromString,
                    response_serializer=shopping__platform__pb2.NotifyClientResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BuyerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BuyerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SearchItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BuyerService/SearchItem',
            shopping__platform__pb2.SearchItemRequest.SerializeToString,
            shopping__platform__pb2.SearchItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BuyerService/BuyItem',
            shopping__platform__pb2.BuyItemRequest.SerializeToString,
            shopping__platform__pb2.BuyItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddToWishlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BuyerService/AddToWishlist',
            shopping__platform__pb2.AddToWishlistRequest.SerializeToString,
            shopping__platform__pb2.AddToWishlistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BuyerService/RateItem',
            shopping__platform__pb2.RateItemRequest.SerializeToString,
            shopping__platform__pb2.RateItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BuyerService/NotifyClient',
            shopping__platform__pb2.NotifyClientRequest.SerializeToString,
            shopping__platform__pb2.NotifyClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
